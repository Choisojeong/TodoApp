[{"/home/csj/github/todoapp/src/index.js":"1","/home/csj/github/todoapp/src/reportWebVitals.js":"2","/home/csj/github/todoapp/src/components/TodoItem.tsx":"3","/home/csj/github/todoapp/src/App.tsx":"4","/home/csj/github/todoapp/src/components/AddItem.tsx":"5","/home/csj/github/todoapp/src/components/TodoItemList.tsx":"6","/home/csj/github/todoapp/src/components/TodoListTemplate.tsx":"7"},{"size":500,"mtime":1610776702375,"results":"8","hashOfConfig":"9"},{"size":362,"mtime":1610776702386,"results":"10","hashOfConfig":"9"},{"size":2733,"mtime":1610815705390,"results":"11","hashOfConfig":"9"},{"size":1756,"mtime":1610815565117,"results":"12","hashOfConfig":"9"},{"size":2469,"mtime":1610813183775,"results":"13","hashOfConfig":"9"},{"size":1148,"mtime":1610815545733,"results":"14","hashOfConfig":"9"},{"size":1120,"mtime":1610815486266,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"1nz26x6",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"28"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/csj/github/todoapp/src/index.js",[],["33","34"],"/home/csj/github/todoapp/src/reportWebVitals.js",[],"/home/csj/github/todoapp/src/components/TodoItem.tsx",["35","36","37","38"],"/home/csj/github/todoapp/src/App.tsx",[],"/home/csj/github/todoapp/src/components/AddItem.tsx",["39","40","41","42","43"],"import React, {useState, useCallback} from 'react';\r\nimport { AiOutlineInsertRowRight } from 'react-icons/ai';\r\nimport styled from \"styled-components\";\r\nimport TodoListTemplate from './TodoListTemplate';\r\nimport { Titem, Titems, initialitem } from '../App';\r\ntype GreetingsProps = {\r\n    onInsert: (newItem:any) =>void;\r\n    newid: number;\r\n  };\r\n  \r\nconst AddItem=({onInsert , newid } : GreetingsProps) => {\r\n  \r\n    const [newTitle, setTitle] = useState('');\r\n    const [newContent, setContent] = useState('');\r\n    const onClick = useCallback(\r\n        () => {\r\n            const item : Titem = {\r\n                id: newid,\r\n                title: newTitle,\r\n                content : newContent,\r\n                checked : false,\r\n                onFixed : false,\r\n            };\r\n            onInsert(item);\r\n            setTitle('');\r\n            setContent('');\r\n        },\r\n        [onInsert,newTitle,newContent],\r\n    );\r\n  \r\n    return (\r\n      <Container>\r\n          <AddContent>\r\n            <Titleinput \r\n                placeholder=\"  제목\"\r\n                value={newTitle} \r\n                onChange={(e)=>setTitle(e.target.value)}/>\r\n            <Contentinput \r\n                placeholder=\"  내용\" \r\n                value={newContent} \r\n                onChange={(e)=>setContent(e.target.value)}/> \r\n          </AddContent>\r\n          <Createbutton onClick= {onClick}>\r\n              추가\r\n          </Createbutton>\r\n      </Container>\r\n    );\r\n};\r\n\r\nconst Container = styled.div`\r\n    display : flex;\r\n\r\n`\r\nconst AddContent = styled.div`\r\n    display : flex;\r\n    flex-direction: column;\r\n    flex : 1;\r\n\r\n`\r\nconst Createbutton = styled.button`\r\n    padding-top : 0.5rem;\r\n    padding-bottom : 0.5rem;\r\n    padding-left: 1rem;\r\n    padding-right: 1rem;\r\n    \r\n    margin-top : 1rem;\r\n    background : #22b8cf;\r\n    border-radius : 3px;\r\n    color : white;\r\n    font-weight : 600;\r\n    cursor : pointer;\r\n    text-align: center;\r\n    &:hover{\r\n        background: #3bc9db;\r\n    }\r\n`;\r\n\r\nconst Contentinput = styled.input`\r\n\r\n    font-size : 1.25rem;\r\n    outline: none;\r\n    border: none;\r\n    margin-top : 1rem;\r\n    margin-bottom : 1rem;\r\n    border-bottom: 1px solid #c5f6fa;\r\n    width : 90%;\r\n`;\r\n\r\nconst Titleinput = styled.input`\r\n    font-size : 1.25rem;\r\n    outline: none;\r\n    border: none;\r\n    margin-top : 1rem;\r\n    margin-bottom : 1rem;\r\n    border-bottom: 1px solid #c5f6fa;\r\n    width : 90%;\r\n`;\r\n\r\n\r\n\r\nexport default AddItem;",["44","45"],"/home/csj/github/todoapp/src/components/TodoItemList.tsx",["46","47","48"],"/home/csj/github/todoapp/src/components/TodoListTemplate.tsx",[],{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","severity":1,"message":"54","line":1,"column":17,"nodeType":"55","messageId":"56","endLine":1,"endColumn":26},{"ruleId":"53","severity":1,"message":"57","line":3,"column":17,"nodeType":"55","messageId":"56","endLine":3,"endColumn":23},{"ruleId":"58","severity":1,"message":"59","line":28,"column":21,"nodeType":"60","endLine":28,"endColumn":53},{"ruleId":"58","severity":1,"message":"61","line":31,"column":21,"nodeType":"60","endLine":31,"endColumn":35},{"ruleId":"53","severity":1,"message":"62","line":2,"column":10,"nodeType":"55","messageId":"56","endLine":2,"endColumn":33},{"ruleId":"53","severity":1,"message":"63","line":4,"column":8,"nodeType":"55","messageId":"56","endLine":4,"endColumn":24},{"ruleId":"53","severity":1,"message":"57","line":5,"column":17,"nodeType":"55","messageId":"56","endLine":5,"endColumn":23},{"ruleId":"53","severity":1,"message":"64","line":5,"column":25,"nodeType":"55","messageId":"56","endLine":5,"endColumn":36},{"ruleId":"65","severity":1,"message":"66","line":28,"column":9,"nodeType":"67","endLine":28,"endColumn":39,"suggestions":"68"},{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","severity":1,"message":"54","line":1,"column":17,"nodeType":"55","messageId":"56","endLine":1,"endColumn":26},{"ruleId":"53","severity":1,"message":"57","line":4,"column":17,"nodeType":"55","messageId":"56","endLine":4,"endColumn":23},{"ruleId":"53","severity":1,"message":"64","line":4,"column":25,"nodeType":"55","messageId":"56","endLine":4,"endColumn":36},"no-native-reassign",["69"],"no-negated-in-lhs",["70"],"@typescript-eslint/no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar","'Titems' is defined but never used.","react/jsx-pascal-case","Imported JSX component Title_text must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","Imported JSX component Content_text must be in PascalCase or SCREAMING_SNAKE_CASE","'AiOutlineInsertRowRight' is defined but never used.","'TodoListTemplate' is defined but never used.","'initialitem' is defined but never used.","react-hooks/exhaustive-deps","React Hook useCallback has a missing dependency: 'newid'. Either include it or remove the dependency array.","ArrayExpression",["71"],"no-global-assign","no-unsafe-negation",{"desc":"72","fix":"73"},"Update the dependencies array to be: [newid, newTitle, newContent, onInsert]",{"range":"74","text":"75"},[891,921],"[newid, newTitle, newContent, onInsert]"]